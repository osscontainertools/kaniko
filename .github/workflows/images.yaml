name: Build images

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"

permissions: {}

jobs:
  build-images:
    concurrency:
      # If a previous run is ongoing with the same head_ref (it's a run on the
      # same PR) then cancel it to save time. If it isn't a PR, only cancel the
      # previous run if it's on the same commit SHA. This prevents a run for a
      # commit push from cancelling a previous commit push's build, since we
      # want an image built and tagged for each commit.
      group: build-images-${{ github.head_ref || github.sha }}
      cancel-in-progress: true

    permissions:
      contents: read  # Read the repo contents.
      id-token: write  # Produce identity token for keyless signing.

    runs-on: ubuntu-latest

    env:
      REGISTRY: martizih/kaniko
      TAG: ${{ github.sha }}
      PLATFORMS: linux/amd64,linux/arm64,linux/s390x,linux/riscv64,linux/ppc64le

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Setup auth if not a PR.
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Don't build for all platforms on PRs.
      - id: platforms
        run: |
          event="${{ github.event_name }}"
          if [[ "$event" == "pull_request" ]]; then
            echo "platforms=linux/amd64" >> $GITHUB_OUTPUT
          else
            platforms="${{ env.PLATFORMS }}"
            echo "platforms=${platforms}" >> $GITHUB_OUTPUT
          fi
      # Build and push with Docker.
      - if: github.event_name != 'pull_request'
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: "${{ env.PLATFORMS }}"

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set build timestamp
        id: build-time
        run: echo "now=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - uses: docker/bake-action@37816e747588cb137173af99ab33873600c46ea8 # v6.8.0
        with:
          source: .
          push: false
          targets: executor,debug,slim,warmer,bootstrap
          set: |
            *.platform=${{ steps.platforms.outputs.platforms }}
            *.annotations.org.opencontainers.image.created=${{ steps.build-time.outputs.now }}
            *.annotations.org.opencontainers.image.authors=${{ github.actor }}
            *.annotations.org.opencontainers.image.url=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            *.annotations.org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/#readme
            *.annotations.org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            *.annotations.org.opencontainers.image.revision=${{ github.sha }}
            *.annotations.org.opencontainers.image.vendor=${{ github.repository_owner }}
            *.annotations.org.opencontainers.image.licenses=Apache-2.0
            *.annotations.org.opencontainers.image.title=${{ matrix.image-name }}:${{ matrix.release-tag }}
            *.annotations.org.opencontainers.image.version=${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || github.sha }}

      # Sign images if not a PR.
      - if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
      - if: github.event_name != 'pull_request'
        run: |
          for target in ("executor" "debug" "slim" "warmer" "bootstrap"); do
            cosign sign --yes "$tag"
          done

          cosign sign --yes \
              ${{ env.REGISTRY }}@${{ steps.build-and-push.outputs.digest }}
